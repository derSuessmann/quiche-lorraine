---
# tasks file for qsstv

- name: Install system packages for {{ name_version }}
  package:
    name: '{{ this_required_system_packages }}'
    state: latest
  become: true
  tags: 'prepare'

- include_role: 
    name: get_source
  vars:
    method: 'download_archive'
    pkg_basename: '{{ this_name }}'
    pkg_version: '{{ this_version }}'
    source_uri: '{{ this_source_uri }}'
    destination: '{{ download_dir }}/{{ name_version }}'
  tags: 'get_source'

# hack to include version in build dir, because current archive 
# does not contain version
- name: stat foo
  stat: 
    path: '{{ download_dir }}/qsstv'
  register: qsstv_build_stat

- name: Rename build directory
  command: mv '{{ download_dir }}/qsstv' '{{ download_dir }}/{{ name_version }}'
  when: qsstv_build_stat.stat.exists

- name: Remove conflicting system packages for {{ name_version }}
  package:
    name:
    - qsstv
    state: absent
  become: true
  tags: 'cleanup'

- include_role: 
    name: build_install
  vars:
    method: 'qmake'
    pkg_basename: '{{ this_name }}'
    pkg_version: '{{ this_version }}'
    source_path: '{{ download_dir }}/{{ name_version }}'
    build_path: '{{ build_dir }}/{{ name_version }}'
    install_path: '{{ stow_dir }}/{{ name_version }}'
    qmake_profile: 'qsstv.pro'
  tags: 'build_install'

- name: Create additional directories for {{ name_version }}
  ansible.builtin.file:
    path: '{{ stow_dir }}/{{ name_version }}/{{ directory }}'
    state: directory
    mode: 'u=rwx,go=rx'
  loop: ['share/applications/', 'share/icons']
  loop_control:
    loop_var: directory
  become: true

- name: Create .desktop file for {{ name_version }}
  template:
    src: desktop.j2
    dest: '{{ stow_dir }}/{{ name_version }}/share/applications/qsstv.desktop'
  become: true

- name: Copy icon for {{ name_version }}
  copy:
    src: '{{ download_dir }}/{{ name_version }}/icons/qsstv.png'
    dest: '{{ stow_dir }}/{{ name_version }}/share/pixmaps/'
    remote_src: yes
  become: true

- name: Unstow old version of {{ name_version }}
  shell:
    cmd: "stow -D {{ stow_options }} {{ this_name }}-{{ ansible_local[this_name]['pkg_version'] }}"
    chdir: '{{ stow_dir }}'
  become: true
  when: ansible_local[this_name] is defined and ansible_local[this_name]['pkg_version'] != this_version

- name: Stow {{ name_version }}
  command:
    cmd: 'stow -R {{ name_version }}'
    chdir: '{{ stow_dir }}'
  become: true

- name: Save installation state of {{ this_name }}-{{ this_version }} to /etc/ansible/facts.d
  template:
    src: package.fact.j2
    dest: '/etc/ansible/facts.d/{{ this_name }}.fact'
  become: true
